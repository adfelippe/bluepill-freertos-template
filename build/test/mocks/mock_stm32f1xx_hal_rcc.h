/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STM32F1XX_HAL_RCC_H
#define _MOCK_STM32F1XX_HAL_RCC_H

#include "unity.h"
#include <stdbool.h>
#include <stdint.h>
#include "stm32f1xx_hal_rcc.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_stm32f1xx_hal_rcc_Init(void);
void mock_stm32f1xx_hal_rcc_Destroy(void);
void mock_stm32f1xx_hal_rcc_Verify(void);




#define HAL_RCC_DeInit_IgnoreAndReturn(cmock_retval) HAL_RCC_DeInit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_DeInit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_RCC_DeInit_StopIgnore() HAL_RCC_DeInit_CMockStopIgnore()
void HAL_RCC_DeInit_CMockStopIgnore(void);
#define HAL_RCC_DeInit_ExpectAndReturn(cmock_retval) HAL_RCC_DeInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_RCC_DeInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_RCC_DeInit_CALLBACK)(int cmock_num_calls);
void HAL_RCC_DeInit_AddCallback(CMOCK_HAL_RCC_DeInit_CALLBACK Callback);
void HAL_RCC_DeInit_Stub(CMOCK_HAL_RCC_DeInit_CALLBACK Callback);
#define HAL_RCC_DeInit_StubWithCallback HAL_RCC_DeInit_Stub
#define HAL_RCC_OscConfig_IgnoreAndReturn(cmock_retval) HAL_RCC_OscConfig_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_OscConfig_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_RCC_OscConfig_StopIgnore() HAL_RCC_OscConfig_CMockStopIgnore()
void HAL_RCC_OscConfig_CMockStopIgnore(void);
#define HAL_RCC_OscConfig_ExpectAndReturn(RCC_OscInitStruct, cmock_retval) HAL_RCC_OscConfig_CMockExpectAndReturn(__LINE__, RCC_OscInitStruct, cmock_retval)
void HAL_RCC_OscConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RCC_OscInitTypeDef* RCC_OscInitStruct, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_RCC_OscConfig_CALLBACK)(RCC_OscInitTypeDef* RCC_OscInitStruct, int cmock_num_calls);
void HAL_RCC_OscConfig_AddCallback(CMOCK_HAL_RCC_OscConfig_CALLBACK Callback);
void HAL_RCC_OscConfig_Stub(CMOCK_HAL_RCC_OscConfig_CALLBACK Callback);
#define HAL_RCC_OscConfig_StubWithCallback HAL_RCC_OscConfig_Stub
#define HAL_RCC_ClockConfig_IgnoreAndReturn(cmock_retval) HAL_RCC_ClockConfig_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_ClockConfig_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_RCC_ClockConfig_StopIgnore() HAL_RCC_ClockConfig_CMockStopIgnore()
void HAL_RCC_ClockConfig_CMockStopIgnore(void);
#define HAL_RCC_ClockConfig_ExpectAndReturn(RCC_ClkInitStruct, FLatency, cmock_retval) HAL_RCC_ClockConfig_CMockExpectAndReturn(__LINE__, RCC_ClkInitStruct, FLatency, cmock_retval)
void HAL_RCC_ClockConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RCC_ClkInitTypeDef* RCC_ClkInitStruct, uint32_t FLatency, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_RCC_ClockConfig_CALLBACK)(RCC_ClkInitTypeDef* RCC_ClkInitStruct, uint32_t FLatency, int cmock_num_calls);
void HAL_RCC_ClockConfig_AddCallback(CMOCK_HAL_RCC_ClockConfig_CALLBACK Callback);
void HAL_RCC_ClockConfig_Stub(CMOCK_HAL_RCC_ClockConfig_CALLBACK Callback);
#define HAL_RCC_ClockConfig_StubWithCallback HAL_RCC_ClockConfig_Stub
#define HAL_RCC_MCOConfig_Ignore() HAL_RCC_MCOConfig_CMockIgnore()
void HAL_RCC_MCOConfig_CMockIgnore(void);
#define HAL_RCC_MCOConfig_StopIgnore() HAL_RCC_MCOConfig_CMockStopIgnore()
void HAL_RCC_MCOConfig_CMockStopIgnore(void);
#define HAL_RCC_MCOConfig_Expect(RCC_MCOx, RCC_MCOSource, RCC_MCODiv) HAL_RCC_MCOConfig_CMockExpect(__LINE__, RCC_MCOx, RCC_MCOSource, RCC_MCODiv)
void HAL_RCC_MCOConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv);
typedef void (* CMOCK_HAL_RCC_MCOConfig_CALLBACK)(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv, int cmock_num_calls);
void HAL_RCC_MCOConfig_AddCallback(CMOCK_HAL_RCC_MCOConfig_CALLBACK Callback);
void HAL_RCC_MCOConfig_Stub(CMOCK_HAL_RCC_MCOConfig_CALLBACK Callback);
#define HAL_RCC_MCOConfig_StubWithCallback HAL_RCC_MCOConfig_Stub
#define HAL_RCC_EnableCSS_Ignore() HAL_RCC_EnableCSS_CMockIgnore()
void HAL_RCC_EnableCSS_CMockIgnore(void);
#define HAL_RCC_EnableCSS_StopIgnore() HAL_RCC_EnableCSS_CMockStopIgnore()
void HAL_RCC_EnableCSS_CMockStopIgnore(void);
#define HAL_RCC_EnableCSS_Expect() HAL_RCC_EnableCSS_CMockExpect(__LINE__)
void HAL_RCC_EnableCSS_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_RCC_EnableCSS_CALLBACK)(int cmock_num_calls);
void HAL_RCC_EnableCSS_AddCallback(CMOCK_HAL_RCC_EnableCSS_CALLBACK Callback);
void HAL_RCC_EnableCSS_Stub(CMOCK_HAL_RCC_EnableCSS_CALLBACK Callback);
#define HAL_RCC_EnableCSS_StubWithCallback HAL_RCC_EnableCSS_Stub
#define HAL_RCC_DisableCSS_Ignore() HAL_RCC_DisableCSS_CMockIgnore()
void HAL_RCC_DisableCSS_CMockIgnore(void);
#define HAL_RCC_DisableCSS_StopIgnore() HAL_RCC_DisableCSS_CMockStopIgnore()
void HAL_RCC_DisableCSS_CMockStopIgnore(void);
#define HAL_RCC_DisableCSS_Expect() HAL_RCC_DisableCSS_CMockExpect(__LINE__)
void HAL_RCC_DisableCSS_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_RCC_DisableCSS_CALLBACK)(int cmock_num_calls);
void HAL_RCC_DisableCSS_AddCallback(CMOCK_HAL_RCC_DisableCSS_CALLBACK Callback);
void HAL_RCC_DisableCSS_Stub(CMOCK_HAL_RCC_DisableCSS_CALLBACK Callback);
#define HAL_RCC_DisableCSS_StubWithCallback HAL_RCC_DisableCSS_Stub
#define HAL_RCC_GetSysClockFreq_IgnoreAndReturn(cmock_retval) HAL_RCC_GetSysClockFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetSysClockFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_RCC_GetSysClockFreq_StopIgnore() HAL_RCC_GetSysClockFreq_CMockStopIgnore()
void HAL_RCC_GetSysClockFreq_CMockStopIgnore(void);
#define HAL_RCC_GetSysClockFreq_ExpectAndReturn(cmock_retval) HAL_RCC_GetSysClockFreq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetSysClockFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_RCC_GetSysClockFreq_CALLBACK)(int cmock_num_calls);
void HAL_RCC_GetSysClockFreq_AddCallback(CMOCK_HAL_RCC_GetSysClockFreq_CALLBACK Callback);
void HAL_RCC_GetSysClockFreq_Stub(CMOCK_HAL_RCC_GetSysClockFreq_CALLBACK Callback);
#define HAL_RCC_GetSysClockFreq_StubWithCallback HAL_RCC_GetSysClockFreq_Stub
#define HAL_RCC_GetHCLKFreq_IgnoreAndReturn(cmock_retval) HAL_RCC_GetHCLKFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetHCLKFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_RCC_GetHCLKFreq_StopIgnore() HAL_RCC_GetHCLKFreq_CMockStopIgnore()
void HAL_RCC_GetHCLKFreq_CMockStopIgnore(void);
#define HAL_RCC_GetHCLKFreq_ExpectAndReturn(cmock_retval) HAL_RCC_GetHCLKFreq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetHCLKFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_RCC_GetHCLKFreq_CALLBACK)(int cmock_num_calls);
void HAL_RCC_GetHCLKFreq_AddCallback(CMOCK_HAL_RCC_GetHCLKFreq_CALLBACK Callback);
void HAL_RCC_GetHCLKFreq_Stub(CMOCK_HAL_RCC_GetHCLKFreq_CALLBACK Callback);
#define HAL_RCC_GetHCLKFreq_StubWithCallback HAL_RCC_GetHCLKFreq_Stub
#define HAL_RCC_GetPCLK1Freq_IgnoreAndReturn(cmock_retval) HAL_RCC_GetPCLK1Freq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetPCLK1Freq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_RCC_GetPCLK1Freq_StopIgnore() HAL_RCC_GetPCLK1Freq_CMockStopIgnore()
void HAL_RCC_GetPCLK1Freq_CMockStopIgnore(void);
#define HAL_RCC_GetPCLK1Freq_ExpectAndReturn(cmock_retval) HAL_RCC_GetPCLK1Freq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetPCLK1Freq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_RCC_GetPCLK1Freq_CALLBACK)(int cmock_num_calls);
void HAL_RCC_GetPCLK1Freq_AddCallback(CMOCK_HAL_RCC_GetPCLK1Freq_CALLBACK Callback);
void HAL_RCC_GetPCLK1Freq_Stub(CMOCK_HAL_RCC_GetPCLK1Freq_CALLBACK Callback);
#define HAL_RCC_GetPCLK1Freq_StubWithCallback HAL_RCC_GetPCLK1Freq_Stub
#define HAL_RCC_GetPCLK2Freq_IgnoreAndReturn(cmock_retval) HAL_RCC_GetPCLK2Freq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetPCLK2Freq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_RCC_GetPCLK2Freq_StopIgnore() HAL_RCC_GetPCLK2Freq_CMockStopIgnore()
void HAL_RCC_GetPCLK2Freq_CMockStopIgnore(void);
#define HAL_RCC_GetPCLK2Freq_ExpectAndReturn(cmock_retval) HAL_RCC_GetPCLK2Freq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_RCC_GetPCLK2Freq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_RCC_GetPCLK2Freq_CALLBACK)(int cmock_num_calls);
void HAL_RCC_GetPCLK2Freq_AddCallback(CMOCK_HAL_RCC_GetPCLK2Freq_CALLBACK Callback);
void HAL_RCC_GetPCLK2Freq_Stub(CMOCK_HAL_RCC_GetPCLK2Freq_CALLBACK Callback);
#define HAL_RCC_GetPCLK2Freq_StubWithCallback HAL_RCC_GetPCLK2Freq_Stub
#define HAL_RCC_GetOscConfig_Ignore() HAL_RCC_GetOscConfig_CMockIgnore()
void HAL_RCC_GetOscConfig_CMockIgnore(void);
#define HAL_RCC_GetOscConfig_StopIgnore() HAL_RCC_GetOscConfig_CMockStopIgnore()
void HAL_RCC_GetOscConfig_CMockStopIgnore(void);
#define HAL_RCC_GetOscConfig_Expect(RCC_OscInitStruct) HAL_RCC_GetOscConfig_CMockExpect(__LINE__, RCC_OscInitStruct)
void HAL_RCC_GetOscConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, RCC_OscInitTypeDef* RCC_OscInitStruct);
typedef void (* CMOCK_HAL_RCC_GetOscConfig_CALLBACK)(RCC_OscInitTypeDef* RCC_OscInitStruct, int cmock_num_calls);
void HAL_RCC_GetOscConfig_AddCallback(CMOCK_HAL_RCC_GetOscConfig_CALLBACK Callback);
void HAL_RCC_GetOscConfig_Stub(CMOCK_HAL_RCC_GetOscConfig_CALLBACK Callback);
#define HAL_RCC_GetOscConfig_StubWithCallback HAL_RCC_GetOscConfig_Stub
#define HAL_RCC_GetClockConfig_Ignore() HAL_RCC_GetClockConfig_CMockIgnore()
void HAL_RCC_GetClockConfig_CMockIgnore(void);
#define HAL_RCC_GetClockConfig_StopIgnore() HAL_RCC_GetClockConfig_CMockStopIgnore()
void HAL_RCC_GetClockConfig_CMockStopIgnore(void);
#define HAL_RCC_GetClockConfig_Expect(RCC_ClkInitStruct, pFLatency) HAL_RCC_GetClockConfig_CMockExpect(__LINE__, RCC_ClkInitStruct, pFLatency)
void HAL_RCC_GetClockConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, RCC_ClkInitTypeDef* RCC_ClkInitStruct, uint32_t* pFLatency);
typedef void (* CMOCK_HAL_RCC_GetClockConfig_CALLBACK)(RCC_ClkInitTypeDef* RCC_ClkInitStruct, uint32_t* pFLatency, int cmock_num_calls);
void HAL_RCC_GetClockConfig_AddCallback(CMOCK_HAL_RCC_GetClockConfig_CALLBACK Callback);
void HAL_RCC_GetClockConfig_Stub(CMOCK_HAL_RCC_GetClockConfig_CALLBACK Callback);
#define HAL_RCC_GetClockConfig_StubWithCallback HAL_RCC_GetClockConfig_Stub
#define HAL_RCC_NMI_IRQHandler_Ignore() HAL_RCC_NMI_IRQHandler_CMockIgnore()
void HAL_RCC_NMI_IRQHandler_CMockIgnore(void);
#define HAL_RCC_NMI_IRQHandler_StopIgnore() HAL_RCC_NMI_IRQHandler_CMockStopIgnore()
void HAL_RCC_NMI_IRQHandler_CMockStopIgnore(void);
#define HAL_RCC_NMI_IRQHandler_Expect() HAL_RCC_NMI_IRQHandler_CMockExpect(__LINE__)
void HAL_RCC_NMI_IRQHandler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_RCC_NMI_IRQHandler_CALLBACK)(int cmock_num_calls);
void HAL_RCC_NMI_IRQHandler_AddCallback(CMOCK_HAL_RCC_NMI_IRQHandler_CALLBACK Callback);
void HAL_RCC_NMI_IRQHandler_Stub(CMOCK_HAL_RCC_NMI_IRQHandler_CALLBACK Callback);
#define HAL_RCC_NMI_IRQHandler_StubWithCallback HAL_RCC_NMI_IRQHandler_Stub
#define HAL_RCC_CSSCallback_Ignore() HAL_RCC_CSSCallback_CMockIgnore()
void HAL_RCC_CSSCallback_CMockIgnore(void);
#define HAL_RCC_CSSCallback_StopIgnore() HAL_RCC_CSSCallback_CMockStopIgnore()
void HAL_RCC_CSSCallback_CMockStopIgnore(void);
#define HAL_RCC_CSSCallback_Expect() HAL_RCC_CSSCallback_CMockExpect(__LINE__)
void HAL_RCC_CSSCallback_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_RCC_CSSCallback_CALLBACK)(int cmock_num_calls);
void HAL_RCC_CSSCallback_AddCallback(CMOCK_HAL_RCC_CSSCallback_CALLBACK Callback);
void HAL_RCC_CSSCallback_Stub(CMOCK_HAL_RCC_CSSCallback_CALLBACK Callback);
#define HAL_RCC_CSSCallback_StubWithCallback HAL_RCC_CSSCallback_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
